#summary Usage instructions, with examples.

= Introduction =

A bit of prep work is required in order to get started, but once the basic structure is in place, adding additional representations and resources should be simple.

Terminology:
  * *Representation*: the client-facing version of an object
  * *Resource*: the object that maps URIs to representations

= Details =

1. Add gwt-jaxrs-proxy to your classpath, and import it into your GWT project
{{{
...
   <inherits name="com.paullindorff.gwt.jaxrs.gwt-jaxrs-proxy"/>
...
}}}

2. Create a representation interface for the desired object
{{{
package com.mystuff.shared.representation;

public interface Thing {
   public Integer getThingId();
   public void setThingId(Integer thingId);
   public String getThingName();
   public void setThingName(String thingName);
}
}}}

3. Create a JAX-RS annotated resource interface for the desired object
{{{
package com.mystuff.shared.resource;

@Path("/things")
public interface ThingResource {
   @GET
   @Path("/{thingId}")
   @Produces(MediaType.APPLICATION_JSON)
   public Thing getThing(@PathParam("thingId") Integer thingId);

   @POST
   @Path("/")
   @Consumes(MediaType.APPLICATION_JSON)
   public Response createThing(Thing thing, @Context UriInfo uriInfo);

   @PUT
   @Path("/{thingId}")
   @Consumes(MediaType.APPLICATION_JSON)
   public void updateThing(@PathParam("thingId") Integer thingId, Thing thing);
}
}}}

4. Create a GWT module descriptor for your shared interfaces, and make sure the descriptor and interfaces are visible to both your server and client projects
{{{
<?xml version="1.0" encoding="UTF-8"?>
<module rename-to="mystuff-shared">
   <source path="shared"/>
</module>
}}}